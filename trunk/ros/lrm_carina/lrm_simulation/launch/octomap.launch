<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>

	<param
		name="/use_sim_time"
		value="true" />

	<rosparam
		command="load"
		file="$(find lrm_simulation)/params/octomap_parameters_full.yaml" />

	<node
		pkg="octomap_server"
		type="octomap_server_node"
		name="octomap_server"
		output="screen"
		respawn="true"
	>
		
		<remap
			from="cloud_in"
			to="/stereo/points2" />

		<remap
			from="projected_map"
			to="map" />

<!-- 
octomap_saver

A small command line tool to request octomap files from 
an octomap_server, similar to map_server#map_saver. 
Just run "octomap_saver mapfile.bt" to request a 
compressed binary octomap via service call and save it 
to mapfile.bt. Run "octomap_saver -f mapfile.ot" 
to request a full probability octomap instead;
 -->

	</node>
</launch>