\subsubsection parameters ROS parameters

Reads and maintains the following parameters on the ROS server

- \b "~transform_tolerance" : \b [double] Specifies the delay in transform (tf) data that is tolerable in seconds. min: 0.0, default: 0.3, max: 10.0
- \b "~update_frequency" : \b [double] The frequency in Hz for the map to be updated. min: 0.0, default: 5.0, max: 100.0
- \b "~publish_frequency" : \b [double] The frequency in Hz for the map to be publish display information. min: 0.0, default: 0.0, max: 100.0
- \b "~max_obstacle_height" : \b [double] The maximum height of any obstacle to be inserted into the costmap in meters. min: 0.0, default: 2.0, max: 50.0
- \b "~max_obstacle_range" : \b [double] The default maximum distance from the robot at which an obstacle will be inserted into the cost map in meters. min: 0.0, default: 2.5, max: 50.0
- \b "~raytrace_range" : \b [double] The default range in meters at which to raytrace out obstacles from the map using sensor data. min: 0.0, default: 3.0, max: 50.0
- \b "~cost_scaling_factor" : \b [double] A scaling factor to apply to cost values during inflation. min: 0.0, default: 10.0, max: 100.0
- \b "~inflation_radius" : \b [double] The radius in meters to which the map inflates obstacle cost values. min: 0.0, default: 0.55, max: 50.0
- \b "~footprint" : \b [str] The footprint of the robot specified in the robot_base_frame coordinate frame as a list in the format: [ [x1, y1], [x2, y2], ...., [xn, yn] ]. min: , default: [], max: 
- \b "~robot_radius" : \b [double] The radius of the robot in meters, this parameter should only be set for circular robots, all others should use the footprint parameter described above. min: 0.0, default: 0.46, max: 10.0
- \b "~static_map" : \b [bool] Whether or not to use the static map to initialize the costmap. min: False, default: True, max: True
- \b "~rolling_window" : \b [bool] Whether or not to use a rolling window version of the costmap. min: False, default: False, max: True
- \b "~unknown_cost_value" : \b [int] The value for which a cost should be considered unknown when reading in a map from the map server. min: 0, default: 0, max: 255
- \b "~width" : \b [int] The width of the map in meters. min: 0, default: 0, max: 20
- \b "~height" : \b [int] The height of the map in meters. min: 0, default: 10, max: 20
- \b "~resolution" : \b [double] The resolution of the map in meters/cell. min: 0.0, default: 0.05, max: 50.0
- \b "~origin_x" : \b [double] The x origin of the map in the global frame in meters. min: 0.0, default: 0.0, max: inf
- \b "~origin_y" : \b [double] The y origin of the map in the global frame in meters. min: 0.0, default: 0.0, max: inf
- \b "~publish_voxel_map" : \b [bool] Whether or not to publish the underlying voxel grid for visualization purposes. min: False, default: False, max: True
- \b "~lethal_cost_threshold" : \b [int] The threshold value at which to consider a cost lethal when reading in a map from the map server. min: 0, default: 100, max: 255
- \b "~map_topic" : \b [str] The topic that the costmap subscribes to for the static map. min: , default: map, max: 
- \b "~map_type" : \b [str] What map type to use. voxel or costmap are the supported types min: , default: costmap, max: 
- \b "~origin_z" : \b [double] The z origin of the map in meters. min: 0.0, default: 0.0, max: inf
- \b "~z_resolution" : \b [double] The z resolution of the map in meters/cell. min: 0.0, default: 0.2, max: 50.0
- \b "~z_voxels" : \b [int] The number of voxels to in each vertical column. min: 0, default: 10, max: 16
- \b "~unknown_threshold" : \b [int] The number of unknown cells allowed in a column considered to be known min: 0, default: 15, max: 16
- \b "~mark_threshold" : \b [int] The maximum number of marked cells allowed in a column considered to be free min: 0, default: 0, max: 16
- \b "~track_unknown_space" : \b [bool] Specifies whether or not to track what space in the costmap is unknown min: False, default: False, max: True
- \b "~restore_defaults" : \b [bool] Restore to the original configuration min: False, default: False, max: True

