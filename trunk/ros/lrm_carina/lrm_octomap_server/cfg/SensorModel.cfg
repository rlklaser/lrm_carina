#!/usr/bin/env python
PACKAGE = "lrm_octomap_server"
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from dynamic_reconfigure.msg import SensorLevels

gen = ParameterGenerator()
#mod = gen.add_group("sensor_model")
mod = gen

gen.add("occ", double_t, SensorLevels.RECONFIGURE_RUNNING, "Occupancy threshold", 0.80, 0.001, 1.0)
mod.add("max", double_t, SensorLevels.RECONFIGURE_RUNNING, "Clamping max threshold", 0.97, 0.001, 1.0)
mod.add("min", double_t, SensorLevels.RECONFIGURE_RUNNING, "Clamping min threshold", 0.12, 0.001, 1.0)
mod.add("hit", double_t, SensorLevels.RECONFIGURE_RUNNING, "Hit sensor model probability", 0.70, 0.5001, 0.9999)
mod.add("hit_mid", double_t, SensorLevels.RECONFIGURE_RUNNING, "Hit sensor model probability (mid distance)", 0.70, 0.5001, 0.9999)
mod.add("hit_far", double_t, SensorLevels.RECONFIGURE_RUNNING, "Hit sensor model probability (far distance)", 0.70, 0.5001, 0.9999)

#mod.add("mis", double_t, SensorLevels.RECONFIGURE_RUNNING, "Miss sensor model probability", 0.40, 0.0001, 0.4999)
mod.add("miss_to_gnd", double_t, SensorLevels.RECONFIGURE_RUNNING, "Miss sensor model probability (to ground)", 0.40, 0.0001, 0.4999)
mod.add("miss_to_obs", double_t, SensorLevels.RECONFIGURE_RUNNING, "Miss sensor model probability (to obstacle)", 0.40, 0.0001, 0.4999)

mod.add("mid_dist", double_t, SensorLevels.RECONFIGURE_RUNNING, "Mid distance", 20.0, 0.0, 1000.0)
mod.add("far_dist", double_t, SensorLevels.RECONFIGURE_RUNNING, "Far distance", 30.0, 0.0, 1000.0)

mod.add("decay_cost", double_t, SensorLevels.RECONFIGURE_RUNNING, "Decaying", 90.0, 0.0, 100.0)

mod.add("degrade_time", double_t, SensorLevels.RECONFIGURE_RUNNING, "Degrading age (sec)", 300.0, 0.0, 360000.0)

mod.add("max_range", double_t, SensorLevels.RECONFIGURE_RUNNING, "Max sensor range", 30, 0.0, 1000)
mod.add("max_range_occ", double_t, SensorLevels.RECONFIGURE_RUNNING, "After occlusion update range", 0.5, 0, 1000)
mod.add("update_occ", double_t, SensorLevels.RECONFIGURE_RUNNING, "Update sensor model after occlusion", 0.50, 0.0001, 0.9999)

exit(gen.generate(PACKAGE, "lrm_octomap_server", "SensorModel"))
