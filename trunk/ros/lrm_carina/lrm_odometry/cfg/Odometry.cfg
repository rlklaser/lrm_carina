#! /usr/bin/env python

PACKAGE='lrm_odometry'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from dynamic_reconfigure.msg import SensorLevels
#from driver_base.msg import SensorLevels

# only includes parameters reconfigurable while running

gen = ParameterGenerator()

#       Name, Type, Reconfiguration level, Description, Default, Min, Max
gen.add("robot_lenght", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "Robot lenght", 1.665, 0.1, 4.99)

gen.add("robot_width", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "Robot width", 0.975, 0.1, 2.99)

gen.add("wheel_diameter", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "Wheel diameter", 0.48, 0.01, 1.99)

gen.add("max_angle_left", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "Left wheel max angle (degrees)", 35, 1, 180)

gen.add("max_angle_right", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "Right wheel max angle (degrees)", 35, 1, 180)

gen.add("steer_bar_zero", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "Steer bar encoder at zero", 0, -2048, 2048)

gen.add("rot_cov", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "Rotation covariance", 0.00001, 0, 99999)

gen.add("pos_cov", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "Translation covariance", 0.00001, 0, 99999)

gen.add("absolute", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "absolute heading", False)
gen.add("absolute_heading", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "absolute heading angle (degrees)", 0.0, -180, 180)
        
gen.add("use_imu", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "Use IMU sensor for yaw", False)
gen.add("use_6dof", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "Map all IMU to TF", True)
gen.add("inverse", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "Map all IMU to TF inverselly", False)
gen.add("publish_tf", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "publish TF", True)        

                        
exit(gen.generate(PACKAGE, "lrm_odometry", "Odometry"))