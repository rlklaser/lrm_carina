<launch>

	<group ns="octomap">

		<rosparam
			command="load"
			file="$(find lrm_bringup)/params/octomap_parameters.yaml" />

		<node
			pkg="nodelet"
			type="nodelet"
			name="map_server"
			args="load lrm_octomap_server/OctomapServerNodelet /camera_nodelet_manager --no-bond"
			output="screen"
			respawn="true"
		>
			<rosparam
				command="load"
				file="$(find lrm_bringup)/params/sensormodel_sim_params.yaml" />
			<remap
				from="map"
				to="/map" />
			<remap
				from="cloud_in"
				to="/cloud_in" />
			<remap
				from="ground_cloud_in"
				to="/ground_cloud_in" />
		</node>

	    <!-- launch-prefix="valgrind -v - -tool=callgrind" 
		<node
			pkg="lrm_octomap_server"
			type="octomap_server_node"
			name="map_server"
			output="screen"
			respawn="true"
		>
			<remap
				from="map"
				to="/map" />
			<remap
				from="cloud_in"
				to="/cloud_in" />
			<remap
				from="ground_cloud_in"
				to="/ground_cloud_in" />
		</node>
-->

		<include file="$(find lrm_bringup)/launch/footprint_eraser.launch" />

	</group>
    
<!-- 
octomap_saver

A small command line tool to request octomap files from 
an octomap_server, similar to map_server#map_saver. 
Just run "octomap_saver mapfile.bt" to request a 
compressed binary octomap via service call and save it 
to mapfile.bt. Run "octomap_saver -f mapfile.ot" 
to request a full probability octomap instead;
 -->

</launch>