#dwa: false
dwa: true
#trajectory rollout if false

#y_vels: [-3 -2 -1 1 2 3]
y_vels: [3]

holonomic_robot: false
acc_lim_y: 0.0
max_vel_y: 0.0
min_vel_y: 0.0

acc_lim_x: 3.0
max_vel_x: 3.0
min_vel_x: 0.1

max_vel_theta: 0.559
min_vel_theta: -0.559

max_rotational_vel: 2.0

sim_time: 1.0
sim_granularity: 0.1
angular_sim_granularity: 0.1

path_distance_bias: 0.5
goal_distance_bias: 0.9

stop_time_buffer: 0.2

occdist_scale: 1.0                  # The weighting for how much the controller should attempt to avoid obstacles
                                    # occdist_scale * (maximum obstacle cost along the trajectory in obstacle cost (0-254))
                                   
oscillation_reset_dist: 0.5
oscillation_reset_angle: 0.15

vx_samples: 10
vtheta_samples: 65

xy_goal_tolerance: 1.0
yaw_goal_tolerance: 1.57

latch_xy_goal_tolerance: false      #stop when reached or rotate in place, false = stop

heading_scoring: true
heading_scoring_timestep: 0.1
heading_lookahead: 1.5

escape_reset_dist: 2.0
escape_reset_theta: 0.0
escape_vel: -1.0

simple_attractor: true             # follow strictly the global path
#simple_attractor: false
meter_scoring: true                # If true, distances are expressed in meters; otherwise grid cells
prune_plan: false

#carlike planner
base_wheels: 1.65
steer: 0.559
