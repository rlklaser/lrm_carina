#! /usr/bin/env python

# Declare parameters that control stereo processing

PACKAGE='lrm_stereo'
import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# disparity block matching pre-filtering parameters
gen.add("prefilter_cap",  int_t, 0, "Bound on normalized pixel values", 31, 1, 63)

# disparity block matching correlation parameters
gen.add("correlation_window_size", int_t, 0, "SAD correlation window width, pixels", 5, 5, 255)
gen.add("min_disparity",           int_t, 0, "Disparity to begin search at, pixels (may be negative)", -16, -128, 128)
gen.add("disparity_range",         int_t, 0, "Number of disparities to search, pixels", 32, 32, 128)

# disparity block matching post-filtering parameters
# NOTE: Making uniqueness_ratio int_t instead of double_t to work around dynamic_reconfigure gui issue
gen.add("uniqueness_ratio",  double_t, 0, "Filter out if best match does not sufficiently exceed the next-best match", 60, 0, 100)
gen.add("speckle_size",      int_t,    0, "Reject regions smaller than this size, pixels", 100, 0, 1000)
gen.add("speckle_range",     int_t,    0, "Max allowed difference between detected disparities", 32, 0, 128)
gen.add("full_dp",     int_t,    0, "Full-scale disparity Dynamic Programming", 1, 0, 1)

  
# First string value is node name, used only for generating documentation
# Second string value ("Disparity") is name of class and generated
#    .h file, with "Config" added, so class DisparityConfig

exit(gen.generate(PACKAGE, "lrm_stereo", "DisparitySGBM"))
